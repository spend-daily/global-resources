AWSTemplateFormatVersion: "2010-09-09"
Description: Global stack for Spend Daily
Parameters:
  GitHubRepo:
    Type: String
    Default: "global-resources"

  GitHubBranch:
    Type: String
    Default: "master"

  GitHubToken:
    Type: String
    Default: "deadbeef"

  GitHubUser:
    Type: String
    Default: "spend-daily"

  GlobalStack:
    Type: String
    Default: global-stack

Resources:
  GlobalStackRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Retain
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: global-stack-cloudformation-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - iam:*
                  - cloudformation:*
                  - codepipeline:*
                  - codebuild:*
                  - lambda:*
                  - s3:*
  GlobalBuildRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: global-code-build-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
              - Resource: "*"
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
                  - cloudformation:*
                  - codebuild:*
                  - iam:*
                  - lambda:*
  GlobalPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: global-pipeline-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${GlobalArtifactBucket}/*
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - cloudformation:*
                  - iam:PassRole

  GlobalArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  GlobalBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: "CODEPIPELINE"
      Source:
        Type: "CODEPIPELINE"
        BuildSpec: |
          version: 0.2
          phases:
            build:
              commands:
                - aws cloudformation package --template-file cloud-template.yaml --s3-bucket "${BUILD_BUCKET}" --output-template-file cloud-formation.yaml
          artifacts:
            files:
              - cloud-formation.yaml
      Environment:
        ComputeType: "BUILD_GENERAL1_SMALL"
        Image: "aws/codebuild/nodejs:6.3.1"
        Type: "LINUX_CONTAINER"
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
      Name: !Ref AWS::StackName
      ServiceRole: !Ref GlobalBuildRole

  GlobalPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: GlobalPipeline
      RoleArn: !GetAtt GlobalPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref GlobalArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceCode
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref GlobalBuildProject
              InputArtifacts:
                - Name: SourceCode
              OutputArtifacts:
                - Name: CloudFormation
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_IAM
                ChangeSetName: GlobalChangeSet
                RoleArn: !GetAtt GlobalStackRole.Arn
                StackName: !Ref GlobalStack
                TemplatePath: CloudFormation::cloud-formation.yaml
              InputArtifacts:
                - Name: CloudFormation
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: GlobalChangeSet
                RoleArn: !GetAtt GlobalStackRole.Arn
                StackName: !Ref GlobalStack
              RunOrder: 2

Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${GlobalPipeline}
